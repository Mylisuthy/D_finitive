// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VeterinariaSanMiguel.Data;

#nullable disable

namespace VeterinariaSanMiguel.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250929041240_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("VeterinariaSanMiguel.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PersonType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasDiscriminator<string>("PersonType").HasValue("Person");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("VeterinariaSanMiguel.Models.Pet", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("IdPerson")
                        .HasColumnType("int");

                    b.Property<string>("kind")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("IdPerson");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("VeterinariaSanMiguel.Models.VeterinaryAppointment", b =>
                {
                    b.Property<int>("IdVetAppointment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdVetAppointment"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdPet")
                        .HasColumnType("int");

                    b.Property<int>("IdVet")
                        .HasColumnType("int");

                    b.HasKey("IdVetAppointment");

                    b.HasIndex("IdPet");

                    b.HasIndex("IdVet");

                    b.ToTable("VetsAppointments");
                });

            modelBuilder.Entity("VeterinariaSanMiguel.Models.Client", b =>
                {
                    b.HasBaseType("VeterinariaSanMiguel.Models.Person");

                    b.Property<bool>("Insurance")
                        .HasColumnType("tinyint(1)");

                    b.HasDiscriminator().HasValue("Client");
                });

            modelBuilder.Entity("VeterinariaSanMiguel.Models.Veterinary", b =>
                {
                    b.HasBaseType("VeterinariaSanMiguel.Models.Person");

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasDiscriminator().HasValue("Veterinary");
                });

            modelBuilder.Entity("VeterinariaSanMiguel.Models.Pet", b =>
                {
                    b.HasOne("VeterinariaSanMiguel.Models.Client", "client")
                        .WithMany()
                        .HasForeignKey("IdPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("client");
                });

            modelBuilder.Entity("VeterinariaSanMiguel.Models.VeterinaryAppointment", b =>
                {
                    b.HasOne("VeterinariaSanMiguel.Models.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("IdPet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinariaSanMiguel.Models.Veterinary", "Vet")
                        .WithMany()
                        .HasForeignKey("IdVet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("Vet");
                });
#pragma warning restore 612, 618
        }
    }
}
